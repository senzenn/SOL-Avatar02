/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: DanlyVostok (https://sketchfab.com/1799danly)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/jumpsuit-low-poly-ddbd830d325b40ceb3829149de146d63
Title: JUMPSUIT Low Poly
*/

import * as THREE from 'three'
import React, { useMemo } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['Genesis8MaleShape_Material_#29_0']: THREE.Mesh
    ['Low_Poly_Headset_Material_#27_0']: THREE.Mesh
    ['Low_Poly_Jumpsuit_Material_#25_0']: THREE.Mesh
    ['DETAILS_Low_Poly_Material_#26_0']: THREE.Mesh
    ['Boots_Low_Poly_Material_#28_0']: THREE.Mesh
  }
  materials: {
    Material_29: THREE.MeshStandardMaterial
    Material_27: THREE.MeshStandardMaterial
    Material_25: THREE.MeshStandardMaterial
    Material_26: THREE.MeshStandardMaterial
    Material_28: THREE.MeshStandardMaterial
  }
}

export function JumpSuit(props: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/models/jumpsuit_low_poly.glb') as GLTFResult;

  // Create custom materials with the desired colors using useMemo
  const materials = useMemo(() => ({
    head: new THREE.MeshStandardMaterial({
      color: new THREE.Color('#0a1f1c'),
      roughness: 0.1,
      metalness: 0.9,
      envMapIntensity: 1.5,
    }),
    suit: new THREE.MeshStandardMaterial({
      color: new THREE.Color('#0a1f1c'),
      roughness: 0.2,
      metalness: 0.8,
      envMapIntensity: 1.2,
    }),
    details: new THREE.MeshStandardMaterial({
      color: new THREE.Color('#ffd700'),
      roughness: 0.3,
      metalness: 0.7,
      envMapIntensity: 1,
    }),
  }), []);

  const model = useMemo(() => (
    <group {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group
          name="Sketchfab_model"
          rotation={[-Math.PI / 2, 0, 0]}
          scale={0.395}
        >
          <group
            name="Stay_Posefbx"
            rotation={[Math.PI / 2, 0, 0]}
            scale={0.025}
          >
            <group name="RootNode">
              <group
                name="Genesis8MaleShape"
                scale={0.999}
              >
                <mesh
                  name="Genesis8MaleShape_Material_#29_0"
                  geometry={nodes['Genesis8MaleShape_Material_#29_0'].geometry}
                  material={materials.head}
                />
              </group>
              <group
                name="Low_Poly_Headset"
                position={[11.01, 161.955, 0.315]}
                rotation={[-Math.PI / 2, 0, 0]}
                scale={[1.137, 1.029, 1.029]}
              >
                <mesh
                  name="Low_Poly_Headset_Material_#27_0"
                  geometry={nodes['Low_Poly_Headset_Material_#27_0'].geometry}
                  material={materials.details}
                />
              </group>
              <group
                name="Low_Poly_Jumpsuit"
                rotation={[-Math.PI / 2, 0, 0]}
              >
                <mesh
                  name="Low_Poly_Jumpsuit_Material_#25_0"
                  geometry={nodes['Low_Poly_Jumpsuit_Material_#25_0'].geometry}
                  material={materials.suit}
                />
              </group>
              <group
                name="DETAILS_Low_Poly"
                rotation={[-Math.PI / 2, 0, 0]}
              >
                <mesh
                  name="DETAILS_Low_Poly_Material_#26_0"
                  geometry={nodes['DETAILS_Low_Poly_Material_#26_0'].geometry}
                  material={materials.details}
                />
              </group>
              <group
                name="Boots_Low_Poly"
                position={[-52.84, 0.135, 26.864]}
                rotation={[-Math.PI / 2, 0, 0]}
              >
                <mesh
                  name="Boots_Low_Poly_Material_#28_0"
                  geometry={nodes['Boots_Low_Poly_Material_#28_0'].geometry}
                  material={materials.suit}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  ), [nodes, materials, props]);

  return model;
}

// Preload the model
useGLTF.preload('/models/jumpsuit_low_poly.glb');
