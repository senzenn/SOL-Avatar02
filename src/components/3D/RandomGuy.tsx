/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Pawel (https://sketchfab.com/keniak313)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/random-guy-c712287c81b7469f9ee9a6757ba2c3c3
Title: Random Guy
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Hair_Character01_0: THREE.Mesh
    Okulary_Character01_0: THREE.Mesh
    Wasy_Character01_0: THREE.Mesh
    Szkla_Character01_Glass_0: THREE.Mesh
    Cube_Character01_0: THREE.Mesh
    Cube_Outline001_0: THREE.Mesh
    Cube001_Character01_0: THREE.Mesh
    Circle_Character01_0: THREE.Mesh
  }
  materials: {
    Character01: THREE.MeshBasicMaterial
    Character01_Glass: THREE.MeshBasicMaterial
    ['Outline.001']: THREE.MeshBasicMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/random_guy.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group
          name="Sketchfab_model"
          rotation={[-Math.PI / 2, 0, 0]}
          userData={{ name: 'Sketchfab_model' }}>
          <group
            name="28590edbf8564874a7a7182b878a7f5afbx"
            rotation={[Math.PI / 2, 0, 0]}
            userData={{ name: '28590edbf8564874a7a7182b878a7f5a.fbx' }}>
            <group name="RootNode" userData={{ name: 'RootNode' }}>
              <group name="Hair" rotation={[-Math.PI / 2, 0, 0]} userData={{ name: 'Hair' }}>
                <mesh
                  name="Hair_Character01_0"
                  castShadow
                  receiveShadow
                  geometry={nodes.Hair_Character01_0.geometry}
                  material={materials.Character01}
                  userData={{ name: 'Hair_Character01_0' }}
                />
              </group>
              <group name="Okulary" rotation={[-Math.PI / 2, 0, 0]} userData={{ name: 'Okulary' }}>
                <mesh
                  name="Okulary_Character01_0"
                  castShadow
                  receiveShadow
                  geometry={nodes.Okulary_Character01_0.geometry}
                  material={materials.Character01}
                  userData={{ name: 'Okulary_Character01_0' }}
                />
              </group>
              <group name="Wasy" rotation={[-Math.PI / 2, 0, 0]} userData={{ name: 'Wasy' }}>
                <mesh
                  name="Wasy_Character01_0"
                  castShadow
                  receiveShadow
                  geometry={nodes.Wasy_Character01_0.geometry}
                  material={materials.Character01}
                  userData={{ name: 'Wasy_Character01_0' }}
                />
              </group>
              <group name="Szkla" rotation={[-Math.PI / 2, 0, 0]} userData={{ name: 'Szkla' }}>
                <mesh
                  name="Szkla_Character01_Glass_0"
                  castShadow
                  receiveShadow
                  geometry={nodes.Szkla_Character01_Glass_0.geometry}
                  material={materials.Character01_Glass}
                  userData={{ name: 'Szkla_Character01_Glass_0' }}
                />
              </group>
              <group name="Cube" rotation={[-Math.PI / 2, 0, 0]} userData={{ name: 'Cube' }}>
                <mesh
                  name="Cube_Character01_0"
                  castShadow
                  receiveShadow
                  geometry={nodes.Cube_Character01_0.geometry}
                  material={materials.Character01}
                  userData={{ name: 'Cube_Character01_0' }}
                />
                <mesh
                  name="Cube_Outline001_0"
                  castShadow
                  receiveShadow
                  geometry={nodes.Cube_Outline001_0.geometry}
                  material={materials['Outline.001']}
                  userData={{ name: 'Cube_Outline.001_0' }}
                />
              </group>
              <group name="Cube001" rotation={[-Math.PI / 2, 0, 0]} userData={{ name: 'Cube.001' }}>
                <mesh
                  name="Cube001_Character01_0"
                  castShadow
                  receiveShadow
                  geometry={nodes.Cube001_Character01_0.geometry}
                  material={materials.Character01}
                  userData={{ name: 'Cube.001_Character01_0' }}
                />
              </group>
              <group name="Circle" rotation={[-Math.PI / 2, 0, 0]} userData={{ name: 'Circle' }}>
                <mesh
                  name="Circle_Character01_0"
                  castShadow
                  receiveShadow
                  geometry={nodes.Circle_Character01_0.geometry}
                  material={materials.Character01}
                  userData={{ name: 'Circle_Character01_0' }}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/random_guy.glb')
